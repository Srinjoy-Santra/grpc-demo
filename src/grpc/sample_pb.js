// source: sample.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.movieDetails.Category', null, global);
goog.exportSymbol('proto.movieDetails.MovieRequest', null, global);
goog.exportSymbol('proto.movieDetails.MovieResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movieDetails.Category = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.movieDetails.Category.repeatedFields_, null);
};
goog.inherits(proto.movieDetails.Category, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movieDetails.Category.displayName = 'proto.movieDetails.Category';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movieDetails.MovieRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.movieDetails.MovieRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movieDetails.MovieRequest.displayName = 'proto.movieDetails.MovieRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.movieDetails.MovieResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.movieDetails.MovieResponse.repeatedFields_, null);
};
goog.inherits(proto.movieDetails.MovieResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.movieDetails.MovieResponse.displayName = 'proto.movieDetails.MovieResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.movieDetails.Category.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movieDetails.Category.prototype.toObject = function(opt_includeInstance) {
  return proto.movieDetails.Category.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movieDetails.Category} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movieDetails.Category.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ratingsList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    isEligibleQuikpay: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movieDetails.Category}
 */
proto.movieDetails.Category.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movieDetails.Category;
  return proto.movieDetails.Category.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movieDetails.Category} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movieDetails.Category}
 */
proto.movieDetails.Category.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setRatingsList(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEligibleQuikpay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movieDetails.Category.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movieDetails.Category.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movieDetails.Category} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movieDetails.Category.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRatingsList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
  f = message.getIsEligibleQuikpay();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.movieDetails.Category.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.movieDetails.Category} returns this
 */
proto.movieDetails.Category.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated float ratings = 2;
 * @return {!Array<number>}
 */
proto.movieDetails.Category.prototype.getRatingsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.movieDetails.Category} returns this
 */
proto.movieDetails.Category.prototype.setRatingsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.movieDetails.Category} returns this
 */
proto.movieDetails.Category.prototype.addRatings = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.movieDetails.Category} returns this
 */
proto.movieDetails.Category.prototype.clearRatingsList = function() {
  return this.setRatingsList([]);
};


/**
 * optional bool is_eligible_quikpay = 3;
 * @return {boolean}
 */
proto.movieDetails.Category.prototype.getIsEligibleQuikpay = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.movieDetails.Category} returns this
 */
proto.movieDetails.Category.prototype.setIsEligibleQuikpay = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movieDetails.MovieRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.movieDetails.MovieRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movieDetails.MovieRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movieDetails.MovieRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ping: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sample: (f = msg.getSample()) && proto.movieDetails.Category.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movieDetails.MovieRequest}
 */
proto.movieDetails.MovieRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movieDetails.MovieRequest;
  return proto.movieDetails.MovieRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movieDetails.MovieRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movieDetails.MovieRequest}
 */
proto.movieDetails.MovieRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPing(value);
      break;
    case 2:
      var value = new proto.movieDetails.Category;
      reader.readMessage(value,proto.movieDetails.Category.deserializeBinaryFromReader);
      msg.setSample(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movieDetails.MovieRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movieDetails.MovieRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movieDetails.MovieRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movieDetails.MovieRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPing();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSample();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.movieDetails.Category.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ping = 1;
 * @return {string}
 */
proto.movieDetails.MovieRequest.prototype.getPing = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.movieDetails.MovieRequest} returns this
 */
proto.movieDetails.MovieRequest.prototype.setPing = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Category sample = 2;
 * @return {?proto.movieDetails.Category}
 */
proto.movieDetails.MovieRequest.prototype.getSample = function() {
  return /** @type{?proto.movieDetails.Category} */ (
    jspb.Message.getWrapperField(this, proto.movieDetails.Category, 2));
};


/**
 * @param {?proto.movieDetails.Category|undefined} value
 * @return {!proto.movieDetails.MovieRequest} returns this
*/
proto.movieDetails.MovieRequest.prototype.setSample = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.movieDetails.MovieRequest} returns this
 */
proto.movieDetails.MovieRequest.prototype.clearSample = function() {
  return this.setSample(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.movieDetails.MovieRequest.prototype.hasSample = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.movieDetails.MovieResponse.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.movieDetails.MovieResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.movieDetails.MovieResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.movieDetails.MovieResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movieDetails.MovieResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 2, ""),
    numbersList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    sampleList: jspb.Message.toObjectList(msg.getSampleList(),
    proto.movieDetails.Category.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.movieDetails.MovieResponse}
 */
proto.movieDetails.MovieResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.movieDetails.MovieResponse;
  return proto.movieDetails.MovieResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.movieDetails.MovieResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.movieDetails.MovieResponse}
 */
proto.movieDetails.MovieResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setNumbersList(value);
      break;
    case 4:
      var value = new proto.movieDetails.Category;
      reader.readMessage(value,proto.movieDetails.Category.deserializeBinaryFromReader);
      msg.addSample(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.movieDetails.MovieResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.movieDetails.MovieResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.movieDetails.MovieResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.movieDetails.MovieResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNumbersList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getSampleList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.movieDetails.Category.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.movieDetails.MovieResponse.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.movieDetails.MovieResponse} returns this
 */
proto.movieDetails.MovieResponse.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string desc = 2;
 * @return {string}
 */
proto.movieDetails.MovieResponse.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.movieDetails.MovieResponse} returns this
 */
proto.movieDetails.MovieResponse.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated int32 numbers = 3;
 * @return {!Array<number>}
 */
proto.movieDetails.MovieResponse.prototype.getNumbersList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.movieDetails.MovieResponse} returns this
 */
proto.movieDetails.MovieResponse.prototype.setNumbersList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.movieDetails.MovieResponse} returns this
 */
proto.movieDetails.MovieResponse.prototype.addNumbers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.movieDetails.MovieResponse} returns this
 */
proto.movieDetails.MovieResponse.prototype.clearNumbersList = function() {
  return this.setNumbersList([]);
};


/**
 * repeated Category sample = 4;
 * @return {!Array<!proto.movieDetails.Category>}
 */
proto.movieDetails.MovieResponse.prototype.getSampleList = function() {
  return /** @type{!Array<!proto.movieDetails.Category>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.movieDetails.Category, 4));
};


/**
 * @param {!Array<!proto.movieDetails.Category>} value
 * @return {!proto.movieDetails.MovieResponse} returns this
*/
proto.movieDetails.MovieResponse.prototype.setSampleList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.movieDetails.Category=} opt_value
 * @param {number=} opt_index
 * @return {!proto.movieDetails.Category}
 */
proto.movieDetails.MovieResponse.prototype.addSample = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.movieDetails.Category, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.movieDetails.MovieResponse} returns this
 */
proto.movieDetails.MovieResponse.prototype.clearSampleList = function() {
  return this.setSampleList([]);
};


goog.object.extend(exports, proto.movieDetails);
