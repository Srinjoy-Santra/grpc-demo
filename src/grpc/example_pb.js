// source: example.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.proto.CMSDetails', null, global);
goog.exportSymbol('proto.proto.Dimensions', null, global);
goog.exportSymbol('proto.proto.ManufactureDetails', null, global);
goog.exportSymbol('proto.proto.Product', null, global);
goog.exportSymbol('proto.proto.Product.Attribute', null, global);
goog.exportSymbol('proto.proto.Product.ConvertedPrice', null, global);
goog.exportSymbol('proto.proto.Product.Donation', null, global);
goog.exportSymbol('proto.proto.Product.Media', null, global);
goog.exportSymbol('proto.proto.Product.SEO', null, global);
goog.exportSymbol('proto.proto.Product.Story', null, global);
goog.exportSymbol('proto.proto.Product.Units', null, global);
goog.exportSymbol('proto.proto.Product.Vendor', null, global);
goog.exportSymbol('proto.proto.ProductQuantity', null, global);
goog.exportSymbol('proto.proto.ProductQuantityRequest', null, global);
goog.exportSymbol('proto.proto.ProductQuantityResponse', null, global);
goog.exportSymbol('proto.proto.ProductRequest', null, global);
goog.exportSymbol('proto.proto.ProductRequest.Attribute', null, global);
goog.exportSymbol('proto.proto.ProductRequest.Filter', null, global);
goog.exportSymbol('proto.proto.ProductRequest.Range', null, global);
goog.exportSymbol('proto.proto.ProductRequest.Range.RangeFields', null, global);
goog.exportSymbol('proto.proto.ProductUpdateRequest', null, global);
goog.exportSymbol('proto.proto.Products', null, global);
goog.exportSymbol('proto.proto.SizeChart', null, global);
goog.exportSymbol('proto.proto.SizeChart.SizeData', null, global);
goog.exportSymbol('proto.proto.Sort', null, global);
goog.exportSymbol('proto.proto.UpdateProductQuantityReq', null, global);
goog.exportSymbol('proto.proto.UpdateProductQuantityRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Products = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.Products.repeatedFields_, null);
};
goog.inherits(proto.proto.Products, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Products.displayName = 'proto.proto.Products';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProductRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.ProductRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.ProductRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ProductRequest.displayName = 'proto.proto.ProductRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProductRequest.Attribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.ProductRequest.Attribute.repeatedFields_, null);
};
goog.inherits(proto.proto.ProductRequest.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ProductRequest.Attribute.displayName = 'proto.proto.ProductRequest.Attribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProductRequest.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ProductRequest.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ProductRequest.Filter.displayName = 'proto.proto.ProductRequest.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProductRequest.Range = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.ProductRequest.Range.repeatedFields_, null);
};
goog.inherits(proto.proto.ProductRequest.Range, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ProductRequest.Range.displayName = 'proto.proto.ProductRequest.Range';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProductRequest.Range.RangeFields = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ProductRequest.Range.RangeFields, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ProductRequest.Range.RangeFields.displayName = 'proto.proto.ProductRequest.Range.RangeFields';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProductUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ProductUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ProductUpdateRequest.displayName = 'proto.proto.ProductUpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.Product.repeatedFields_, null);
};
goog.inherits(proto.proto.Product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Product.displayName = 'proto.proto.Product';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Product.Attribute = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Product.Attribute, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Product.Attribute.displayName = 'proto.proto.Product.Attribute';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Product.SEO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Product.SEO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Product.SEO.displayName = 'proto.proto.Product.SEO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Product.Units = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Product.Units, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Product.Units.displayName = 'proto.proto.Product.Units';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Product.Story = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.Product.Story.repeatedFields_, null);
};
goog.inherits(proto.proto.Product.Story, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Product.Story.displayName = 'proto.proto.Product.Story';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Product.Media = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Product.Media, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Product.Media.displayName = 'proto.proto.Product.Media';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Product.Vendor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Product.Vendor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Product.Vendor.displayName = 'proto.proto.Product.Vendor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Product.Donation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Product.Donation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Product.Donation.displayName = 'proto.proto.Product.Donation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Product.ConvertedPrice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Product.ConvertedPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Product.ConvertedPrice.displayName = 'proto.proto.Product.ConvertedPrice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Dimensions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Dimensions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Dimensions.displayName = 'proto.proto.Dimensions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.CMSDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.CMSDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.CMSDetails.displayName = 'proto.proto.CMSDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ManufactureDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ManufactureDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ManufactureDetails.displayName = 'proto.proto.ManufactureDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Sort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Sort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.Sort.displayName = 'proto.proto.Sort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.SizeChart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.SizeChart.repeatedFields_, null);
};
goog.inherits(proto.proto.SizeChart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.SizeChart.displayName = 'proto.proto.SizeChart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.SizeChart.SizeData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.SizeChart.SizeData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.SizeChart.SizeData.displayName = 'proto.proto.SizeChart.SizeData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UpdateProductQuantityReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.UpdateProductQuantityReq.repeatedFields_, null);
};
goog.inherits(proto.proto.UpdateProductQuantityReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UpdateProductQuantityReq.displayName = 'proto.proto.UpdateProductQuantityReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UpdateProductQuantityRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UpdateProductQuantityRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.UpdateProductQuantityRes.displayName = 'proto.proto.UpdateProductQuantityRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProductQuantity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ProductQuantity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ProductQuantity.displayName = 'proto.proto.ProductQuantity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProductQuantityResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.ProductQuantityResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.ProductQuantityResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ProductQuantityResponse.displayName = 'proto.proto.ProductQuantityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ProductQuantityRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.ProductQuantityRequest.repeatedFields_, null);
};
goog.inherits(proto.proto.ProductQuantityRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ProductQuantityRequest.displayName = 'proto.proto.ProductQuantityRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.Products.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Products.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Products.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Products} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Products.toObject = function(includeInstance, msg) {
  var f, obj = {
    productsList: jspb.Message.toObjectList(msg.getProductsList(),
    proto.proto.Product.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Products}
 */
proto.proto.Products.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Products;
  return proto.proto.Products.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Products} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Products}
 */
proto.proto.Products.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.Product;
      reader.readMessage(value,proto.proto.Product.deserializeBinaryFromReader);
      msg.addProducts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Products.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Products.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Products} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Products.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.Product.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Product products = 1;
 * @return {!Array<!proto.proto.Product>}
 */
proto.proto.Products.prototype.getProductsList = function() {
  return /** @type{!Array<!proto.proto.Product>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Product, 1));
};


/**
 * @param {!Array<!proto.proto.Product>} value
 * @return {!proto.proto.Products} returns this
*/
proto.proto.Products.prototype.setProductsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.Product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Product}
 */
proto.proto.Products.prototype.addProducts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.Product, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Products} returns this
 */
proto.proto.Products.prototype.clearProductsList = function() {
  return this.setProductsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.ProductRequest.repeatedFields_ = [3,8,9,10,12,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProductRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProductRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProductRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    categoryid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    categoryidsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    sort: (f = msg.getSort()) && proto.proto.Sort.toObject(includeInstance, f),
    filter: (f = msg.getFilter()) && proto.proto.ProductRequest.Filter.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 6, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 7, 0),
    rangeList: jspb.Message.toObjectList(msg.getRangeList(),
    proto.proto.ProductRequest.Range.toObject, includeInstance),
    selectionList: jspb.Message.toObjectList(msg.getSelectionList(),
    proto.proto.ProductRequest.Attribute.toObject, includeInstance),
    cmsidsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    devicetype: jspb.Message.getFieldWithDefault(msg, 11, ""),
    idsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    eventcodesList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    eventcode: jspb.Message.getFieldWithDefault(msg, 14, ""),
    suggested: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    excludedevice: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    skipactive: jspb.Message.getBooleanFieldWithDefault(msg, 17, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProductRequest}
 */
proto.proto.ProductRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProductRequest;
  return proto.proto.ProductRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProductRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProductRequest}
 */
proto.proto.ProductRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCategoryids(value);
      break;
    case 4:
      var value = new proto.proto.Sort;
      reader.readMessage(value,proto.proto.Sort.deserializeBinaryFromReader);
      msg.setSort(value);
      break;
    case 5:
      var value = new proto.proto.ProductRequest.Filter;
      reader.readMessage(value,proto.proto.ProductRequest.Filter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 8:
      var value = new proto.proto.ProductRequest.Range;
      reader.readMessage(value,proto.proto.ProductRequest.Range.deserializeBinaryFromReader);
      msg.addRange(value);
      break;
    case 9:
      var value = new proto.proto.ProductRequest.Attribute;
      reader.readMessage(value,proto.proto.ProductRequest.Attribute.deserializeBinaryFromReader);
      msg.addSelection(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addCmsids(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicetype(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.addEventcodes(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventcode(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuggested(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExcludedevice(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSkipactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProductRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProductRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProductRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCategoryidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getSort();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.proto.Sort.serializeBinaryToWriter
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.proto.ProductRequest.Filter.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getRangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.proto.ProductRequest.Range.serializeBinaryToWriter
    );
  }
  f = message.getSelectionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.proto.ProductRequest.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getCmsidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getDevicetype();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getEventcodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      13,
      f
    );
  }
  f = message.getEventcode();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getSuggested();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getExcludedevice();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getSkipactive();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.ProductRequest.Attribute.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProductRequest.Attribute.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProductRequest.Attribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProductRequest.Attribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.Attribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valueList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProductRequest.Attribute}
 */
proto.proto.ProductRequest.Attribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProductRequest.Attribute;
  return proto.proto.ProductRequest.Attribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProductRequest.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProductRequest.Attribute}
 */
proto.proto.ProductRequest.Attribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProductRequest.Attribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProductRequest.Attribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProductRequest.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.Attribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.proto.ProductRequest.Attribute.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ProductRequest.Attribute} returns this
 */
proto.proto.ProductRequest.Attribute.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string value = 2;
 * @return {!Array<string>}
 */
proto.proto.ProductRequest.Attribute.prototype.getValueList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.ProductRequest.Attribute} returns this
 */
proto.proto.ProductRequest.Attribute.prototype.setValueList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductRequest.Attribute} returns this
 */
proto.proto.ProductRequest.Attribute.prototype.addValue = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductRequest.Attribute} returns this
 */
proto.proto.ProductRequest.Attribute.prototype.clearValueList = function() {
  return this.setValueList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProductRequest.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProductRequest.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProductRequest.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    categories: jspb.Message.getFieldWithDefault(msg, 1, ""),
    minprice: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxprice: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProductRequest.Filter}
 */
proto.proto.ProductRequest.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProductRequest.Filter;
  return proto.proto.ProductRequest.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProductRequest.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProductRequest.Filter}
 */
proto.proto.ProductRequest.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategories(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinprice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxprice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProductRequest.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProductRequest.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProductRequest.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategories();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMinprice();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMaxprice();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string categories = 1;
 * @return {string}
 */
proto.proto.ProductRequest.Filter.prototype.getCategories = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ProductRequest.Filter} returns this
 */
proto.proto.ProductRequest.Filter.prototype.setCategories = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 minPrice = 2;
 * @return {number}
 */
proto.proto.ProductRequest.Filter.prototype.getMinprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ProductRequest.Filter} returns this
 */
proto.proto.ProductRequest.Filter.prototype.setMinprice = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 maxPrice = 3;
 * @return {number}
 */
proto.proto.ProductRequest.Filter.prototype.getMaxprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ProductRequest.Filter} returns this
 */
proto.proto.ProductRequest.Filter.prototype.setMaxprice = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.ProductRequest.Range.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProductRequest.Range.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProductRequest.Range.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProductRequest.Range} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.Range.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valueList: jspb.Message.toObjectList(msg.getValueList(),
    proto.proto.ProductRequest.Range.RangeFields.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProductRequest.Range}
 */
proto.proto.ProductRequest.Range.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProductRequest.Range;
  return proto.proto.ProductRequest.Range.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProductRequest.Range} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProductRequest.Range}
 */
proto.proto.ProductRequest.Range.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = new proto.proto.ProductRequest.Range.RangeFields;
      reader.readMessage(value,proto.proto.ProductRequest.Range.RangeFields.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProductRequest.Range.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProductRequest.Range.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProductRequest.Range} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.Range.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.proto.ProductRequest.Range.RangeFields.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProductRequest.Range.RangeFields.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProductRequest.Range.RangeFields.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProductRequest.Range.RangeFields} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.Range.RangeFields.toObject = function(includeInstance, msg) {
  var f, obj = {
    min: jspb.Message.getFieldWithDefault(msg, 1, 0),
    max: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProductRequest.Range.RangeFields}
 */
proto.proto.ProductRequest.Range.RangeFields.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProductRequest.Range.RangeFields;
  return proto.proto.ProductRequest.Range.RangeFields.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProductRequest.Range.RangeFields} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProductRequest.Range.RangeFields}
 */
proto.proto.ProductRequest.Range.RangeFields.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProductRequest.Range.RangeFields.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProductRequest.Range.RangeFields.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProductRequest.Range.RangeFields} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductRequest.Range.RangeFields.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMin();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMax();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 min = 1;
 * @return {number}
 */
proto.proto.ProductRequest.Range.RangeFields.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ProductRequest.Range.RangeFields} returns this
 */
proto.proto.ProductRequest.Range.RangeFields.prototype.setMin = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 max = 2;
 * @return {number}
 */
proto.proto.ProductRequest.Range.RangeFields.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ProductRequest.Range.RangeFields} returns this
 */
proto.proto.ProductRequest.Range.RangeFields.prototype.setMax = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.proto.ProductRequest.Range.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ProductRequest.Range} returns this
 */
proto.proto.ProductRequest.Range.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated RangeFields value = 2;
 * @return {!Array<!proto.proto.ProductRequest.Range.RangeFields>}
 */
proto.proto.ProductRequest.Range.prototype.getValueList = function() {
  return /** @type{!Array<!proto.proto.ProductRequest.Range.RangeFields>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.ProductRequest.Range.RangeFields, 2));
};


/**
 * @param {!Array<!proto.proto.ProductRequest.Range.RangeFields>} value
 * @return {!proto.proto.ProductRequest.Range} returns this
*/
proto.proto.ProductRequest.Range.prototype.setValueList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.proto.ProductRequest.Range.RangeFields=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductRequest.Range.RangeFields}
 */
proto.proto.ProductRequest.Range.prototype.addValue = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.proto.ProductRequest.Range.RangeFields, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductRequest.Range} returns this
 */
proto.proto.ProductRequest.Range.prototype.clearValueList = function() {
  return this.setValueList([]);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.ProductRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string categoryId = 2;
 * @return {string}
 */
proto.proto.ProductRequest.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string categoryIds = 3;
 * @return {!Array<string>}
 */
proto.proto.ProductRequest.prototype.getCategoryidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setCategoryidsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.addCategoryids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.clearCategoryidsList = function() {
  return this.setCategoryidsList([]);
};


/**
 * optional Sort sort = 4;
 * @return {?proto.proto.Sort}
 */
proto.proto.ProductRequest.prototype.getSort = function() {
  return /** @type{?proto.proto.Sort} */ (
    jspb.Message.getWrapperField(this, proto.proto.Sort, 4));
};


/**
 * @param {?proto.proto.Sort|undefined} value
 * @return {!proto.proto.ProductRequest} returns this
*/
proto.proto.ProductRequest.prototype.setSort = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.clearSort = function() {
  return this.setSort(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ProductRequest.prototype.hasSort = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Filter filter = 5;
 * @return {?proto.proto.ProductRequest.Filter}
 */
proto.proto.ProductRequest.prototype.getFilter = function() {
  return /** @type{?proto.proto.ProductRequest.Filter} */ (
    jspb.Message.getWrapperField(this, proto.proto.ProductRequest.Filter, 5));
};


/**
 * @param {?proto.proto.ProductRequest.Filter|undefined} value
 * @return {!proto.proto.ProductRequest} returns this
*/
proto.proto.ProductRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ProductRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 limit = 6;
 * @return {number}
 */
proto.proto.ProductRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 offset = 7;
 * @return {number}
 */
proto.proto.ProductRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated Range range = 8;
 * @return {!Array<!proto.proto.ProductRequest.Range>}
 */
proto.proto.ProductRequest.prototype.getRangeList = function() {
  return /** @type{!Array<!proto.proto.ProductRequest.Range>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.ProductRequest.Range, 8));
};


/**
 * @param {!Array<!proto.proto.ProductRequest.Range>} value
 * @return {!proto.proto.ProductRequest} returns this
*/
proto.proto.ProductRequest.prototype.setRangeList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.proto.ProductRequest.Range=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductRequest.Range}
 */
proto.proto.ProductRequest.prototype.addRange = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.proto.ProductRequest.Range, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.clearRangeList = function() {
  return this.setRangeList([]);
};


/**
 * repeated Attribute selection = 9;
 * @return {!Array<!proto.proto.ProductRequest.Attribute>}
 */
proto.proto.ProductRequest.prototype.getSelectionList = function() {
  return /** @type{!Array<!proto.proto.ProductRequest.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.ProductRequest.Attribute, 9));
};


/**
 * @param {!Array<!proto.proto.ProductRequest.Attribute>} value
 * @return {!proto.proto.ProductRequest} returns this
*/
proto.proto.ProductRequest.prototype.setSelectionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.proto.ProductRequest.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductRequest.Attribute}
 */
proto.proto.ProductRequest.prototype.addSelection = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.proto.ProductRequest.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.clearSelectionList = function() {
  return this.setSelectionList([]);
};


/**
 * repeated string cmsIds = 10;
 * @return {!Array<string>}
 */
proto.proto.ProductRequest.prototype.getCmsidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setCmsidsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.addCmsids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.clearCmsidsList = function() {
  return this.setCmsidsList([]);
};


/**
 * optional string deviceType = 11;
 * @return {string}
 */
proto.proto.ProductRequest.prototype.getDevicetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setDevicetype = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated string ids = 12;
 * @return {!Array<string>}
 */
proto.proto.ProductRequest.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setIdsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.addIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.clearIdsList = function() {
  return this.setIdsList([]);
};


/**
 * repeated string eventCodes = 13;
 * @return {!Array<string>}
 */
proto.proto.ProductRequest.prototype.getEventcodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setEventcodesList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.addEventcodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.clearEventcodesList = function() {
  return this.setEventcodesList([]);
};


/**
 * optional string eventCode = 14;
 * @return {string}
 */
proto.proto.ProductRequest.prototype.getEventcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setEventcode = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool suggested = 15;
 * @return {boolean}
 */
proto.proto.ProductRequest.prototype.getSuggested = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setSuggested = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool excludeDevice = 16;
 * @return {boolean}
 */
proto.proto.ProductRequest.prototype.getExcludedevice = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setExcludedevice = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional bool skipActive = 17;
 * @return {boolean}
 */
proto.proto.ProductRequest.prototype.getSkipactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.ProductRequest} returns this
 */
proto.proto.ProductRequest.prototype.setSkipactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProductUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProductUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProductUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: (f = msg.getQuery()) && proto.proto.ProductRequest.toObject(includeInstance, f),
    product: (f = msg.getProduct()) && proto.proto.Product.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProductUpdateRequest}
 */
proto.proto.ProductUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProductUpdateRequest;
  return proto.proto.ProductUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProductUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProductUpdateRequest}
 */
proto.proto.ProductUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.ProductRequest;
      reader.readMessage(value,proto.proto.ProductRequest.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 2:
      var value = new proto.proto.Product;
      reader.readMessage(value,proto.proto.Product.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProductUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProductUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProductUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.ProductRequest.serializeBinaryToWriter
    );
  }
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.proto.Product.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProductRequest query = 1;
 * @return {?proto.proto.ProductRequest}
 */
proto.proto.ProductUpdateRequest.prototype.getQuery = function() {
  return /** @type{?proto.proto.ProductRequest} */ (
    jspb.Message.getWrapperField(this, proto.proto.ProductRequest, 1));
};


/**
 * @param {?proto.proto.ProductRequest|undefined} value
 * @return {!proto.proto.ProductUpdateRequest} returns this
*/
proto.proto.ProductUpdateRequest.prototype.setQuery = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ProductUpdateRequest} returns this
 */
proto.proto.ProductUpdateRequest.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ProductUpdateRequest.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Product product = 2;
 * @return {?proto.proto.Product}
 */
proto.proto.ProductUpdateRequest.prototype.getProduct = function() {
  return /** @type{?proto.proto.Product} */ (
    jspb.Message.getWrapperField(this, proto.proto.Product, 2));
};


/**
 * @param {?proto.proto.Product|undefined} value
 * @return {!proto.proto.ProductUpdateRequest} returns this
*/
proto.proto.ProductUpdateRequest.prototype.setProduct = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ProductUpdateRequest} returns this
 */
proto.proto.ProductUpdateRequest.prototype.clearProduct = function() {
  return this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ProductUpdateRequest.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.Product.repeatedFields_ = [8,13,14,16,27,31,50];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Product.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sku: jspb.Message.getFieldWithDefault(msg, 3, ""),
    title: jspb.Message.getFieldWithDefault(msg, 4, ""),
    description: jspb.Message.getFieldWithDefault(msg, 5, ""),
    shortdescription: jspb.Message.getFieldWithDefault(msg, 6, ""),
    parentid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    categoriesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    currency: jspb.Message.getFieldWithDefault(msg, 9, ""),
    price: jspb.Message.getFieldWithDefault(msg, 10, 0),
    sellprice: jspb.Message.getFieldWithDefault(msg, 12, 0),
    imagesList: jspb.Message.toObjectList(msg.getImagesList(),
    proto.proto.Product.Media.toObject, includeInstance),
    videosList: jspb.Message.toObjectList(msg.getVideosList(),
    proto.proto.Product.Media.toObject, includeInstance),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    attributesList: jspb.Message.toObjectList(msg.getAttributesList(),
    proto.proto.Product.Attribute.toObject, includeInstance),
    dimensions: (f = msg.getDimensions()) && proto.proto.Dimensions.toObject(includeInstance, f),
    seo: (f = msg.getSeo()) && proto.proto.Product.SEO.toObject(includeInstance, f),
    cmsdetails: (f = msg.getCmsdetails()) && proto.proto.CMSDetails.toObject(includeInstance, f),
    variantsList: jspb.Message.toObjectList(msg.getVariantsList(),
    proto.proto.Product.toObject, includeInstance),
    quantity: jspb.Message.getFieldWithDefault(msg, 28, 0),
    weight: jspb.Message.getFloatingPointFieldWithDefault(msg, 29, 0.0),
    units: (f = msg.getUnits()) && proto.proto.Product.Units.toObject(includeInstance, f),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 31)) == null ? undefined : f,
    collection: jspb.Message.getFieldWithDefault(msg, 32, ""),
    maxallowed: jspb.Message.getFieldWithDefault(msg, 33, 0),
    mrp: jspb.Message.getFieldWithDefault(msg, 34, 0),
    hsncode: jspb.Message.getFieldWithDefault(msg, 35, ""),
    story: (f = msg.getStory()) && proto.proto.Product.Story.toObject(includeInstance, f),
    strikeoutprice: jspb.Message.getFieldWithDefault(msg, 37, 0),
    badge: jspb.Message.getFieldWithDefault(msg, 38, ""),
    vendor: (f = msg.getVendor()) && proto.proto.Product.Vendor.toObject(includeInstance, f),
    deliverytime: jspb.Message.getFieldWithDefault(msg, 40, ""),
    donation: (f = msg.getDonation()) && proto.proto.Product.Donation.toObject(includeInstance, f),
    flag: jspb.Message.getFieldWithDefault(msg, 42, ""),
    returnnexchange: jspb.Message.getFieldWithDefault(msg, 43, ""),
    sizechart: (f = msg.getSizechart()) && proto.proto.SizeChart.toObject(includeInstance, f),
    thumbnail: (f = msg.getThumbnail()) && proto.proto.Product.Media.toObject(includeInstance, f),
    sellerid: jspb.Message.getFieldWithDefault(msg, 46, ""),
    footer: jspb.Message.getFieldWithDefault(msg, 47, ""),
    redirection: jspb.Message.getFieldWithDefault(msg, 48, ""),
    cod: jspb.Message.getBooleanFieldWithDefault(msg, 49, false),
    eventcodesList: (f = jspb.Message.getRepeatedField(msg, 50)) == null ? undefined : f,
    qcurl: jspb.Message.getFieldWithDefault(msg, 51, ""),
    convertedprice: (f = msg.getConvertedprice()) && proto.proto.Product.ConvertedPrice.toObject(includeInstance, f),
    thresholdquantity: jspb.Message.getFieldWithDefault(msg, 53, 0),
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 54, false),
    categoryid: jspb.Message.getFieldWithDefault(msg, 55, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Product}
 */
proto.proto.Product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Product;
  return proto.proto.Product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Product}
 */
proto.proto.Product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSku(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortdescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addCategories(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPrice(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSellprice(value);
      break;
    case 13:
      var value = new proto.proto.Product.Media;
      reader.readMessage(value,proto.proto.Product.Media.deserializeBinaryFromReader);
      msg.addImages(value);
      break;
    case 14:
      var value = new proto.proto.Product.Media;
      reader.readMessage(value,proto.proto.Product.Media.deserializeBinaryFromReader);
      msg.addVideos(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 16:
      var value = new proto.proto.Product.Attribute;
      reader.readMessage(value,proto.proto.Product.Attribute.deserializeBinaryFromReader);
      msg.addAttributes(value);
      break;
    case 17:
      var value = new proto.proto.Dimensions;
      reader.readMessage(value,proto.proto.Dimensions.deserializeBinaryFromReader);
      msg.setDimensions(value);
      break;
    case 20:
      var value = new proto.proto.Product.SEO;
      reader.readMessage(value,proto.proto.Product.SEO.deserializeBinaryFromReader);
      msg.setSeo(value);
      break;
    case 24:
      var value = new proto.proto.CMSDetails;
      reader.readMessage(value,proto.proto.CMSDetails.deserializeBinaryFromReader);
      msg.setCmsdetails(value);
      break;
    case 27:
      var value = new proto.proto.Product;
      reader.readMessage(value,proto.proto.Product.deserializeBinaryFromReader);
      msg.addVariants(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWeight(value);
      break;
    case 30:
      var value = new proto.proto.Product.Units;
      reader.readMessage(value,proto.proto.Product.Units.deserializeBinaryFromReader);
      msg.setUnits(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxallowed(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMrp(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setHsncode(value);
      break;
    case 36:
      var value = new proto.proto.Product.Story;
      reader.readMessage(value,proto.proto.Product.Story.deserializeBinaryFromReader);
      msg.setStory(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStrikeoutprice(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setBadge(value);
      break;
    case 39:
      var value = new proto.proto.Product.Vendor;
      reader.readMessage(value,proto.proto.Product.Vendor.deserializeBinaryFromReader);
      msg.setVendor(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeliverytime(value);
      break;
    case 41:
      var value = new proto.proto.Product.Donation;
      reader.readMessage(value,proto.proto.Product.Donation.deserializeBinaryFromReader);
      msg.setDonation(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlag(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnnexchange(value);
      break;
    case 44:
      var value = new proto.proto.SizeChart;
      reader.readMessage(value,proto.proto.SizeChart.deserializeBinaryFromReader);
      msg.setSizechart(value);
      break;
    case 45:
      var value = new proto.proto.Product.Media;
      reader.readMessage(value,proto.proto.Product.Media.deserializeBinaryFromReader);
      msg.setThumbnail(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellerid(value);
      break;
    case 47:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    case 48:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirection(value);
      break;
    case 49:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCod(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.addEventcodes(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setQcurl(value);
      break;
    case 52:
      var value = new proto.proto.Product.ConvertedPrice;
      reader.readMessage(value,proto.proto.Product.ConvertedPrice.deserializeBinaryFromReader);
      msg.setConvertedprice(value);
      break;
    case 53:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThresholdquantity(value);
      break;
    case 54:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSku();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getShortdescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getParentid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getSellprice();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.proto.Product.Media.serializeBinaryToWriter
    );
  }
  f = message.getVideosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      proto.proto.Product.Media.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getAttributesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.proto.Product.Attribute.serializeBinaryToWriter
    );
  }
  f = message.getDimensions();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.proto.Dimensions.serializeBinaryToWriter
    );
  }
  f = message.getSeo();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.proto.Product.SEO.serializeBinaryToWriter
    );
  }
  f = message.getCmsdetails();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.proto.CMSDetails.serializeBinaryToWriter
    );
  }
  f = message.getVariantsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      27,
      f,
      proto.proto.Product.serializeBinaryToWriter
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      28,
      f
    );
  }
  f = message.getWeight();
  if (f !== 0.0) {
    writer.writeFloat(
      29,
      f
    );
  }
  f = message.getUnits();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.proto.Product.Units.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      31,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getMaxallowed();
  if (f !== 0) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getMrp();
  if (f !== 0) {
    writer.writeInt64(
      34,
      f
    );
  }
  f = message.getHsncode();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getStory();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.proto.Product.Story.serializeBinaryToWriter
    );
  }
  f = message.getStrikeoutprice();
  if (f !== 0) {
    writer.writeInt64(
      37,
      f
    );
  }
  f = message.getBadge();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getVendor();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.proto.Product.Vendor.serializeBinaryToWriter
    );
  }
  f = message.getDeliverytime();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getDonation();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      proto.proto.Product.Donation.serializeBinaryToWriter
    );
  }
  f = message.getFlag();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getReturnnexchange();
  if (f.length > 0) {
    writer.writeString(
      43,
      f
    );
  }
  f = message.getSizechart();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      proto.proto.SizeChart.serializeBinaryToWriter
    );
  }
  f = message.getThumbnail();
  if (f != null) {
    writer.writeMessage(
      45,
      f,
      proto.proto.Product.Media.serializeBinaryToWriter
    );
  }
  f = message.getSellerid();
  if (f.length > 0) {
    writer.writeString(
      46,
      f
    );
  }
  f = message.getFooter();
  if (f.length > 0) {
    writer.writeString(
      47,
      f
    );
  }
  f = message.getRedirection();
  if (f.length > 0) {
    writer.writeString(
      48,
      f
    );
  }
  f = message.getCod();
  if (f) {
    writer.writeBool(
      49,
      f
    );
  }
  f = message.getEventcodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      50,
      f
    );
  }
  f = message.getQcurl();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getConvertedprice();
  if (f != null) {
    writer.writeMessage(
      52,
      f,
      proto.proto.Product.ConvertedPrice.serializeBinaryToWriter
    );
  }
  f = message.getThresholdquantity();
  if (f !== 0) {
    writer.writeInt32(
      53,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      54,
      f
    );
  }
  f = message.getCategoryid();
  if (f.length > 0) {
    writer.writeString(
      55,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Product.Attribute.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Product.Attribute.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Product.Attribute} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Attribute.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Product.Attribute}
 */
proto.proto.Product.Attribute.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Product.Attribute;
  return proto.proto.Product.Attribute.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Product.Attribute} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Product.Attribute}
 */
proto.proto.Product.Attribute.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Product.Attribute.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Product.Attribute.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Product.Attribute} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Attribute.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.proto.Product.Attribute.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Attribute} returns this
 */
proto.proto.Product.Attribute.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.proto.Product.Attribute.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Attribute} returns this
 */
proto.proto.Product.Attribute.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Product.SEO.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Product.SEO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Product.SEO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.SEO.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    keywords: jspb.Message.getFieldWithDefault(msg, 3, ""),
    robots: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Product.SEO}
 */
proto.proto.Product.SEO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Product.SEO;
  return proto.proto.Product.SEO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Product.SEO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Product.SEO}
 */
proto.proto.Product.SEO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeywords(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRobots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Product.SEO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Product.SEO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Product.SEO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.SEO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKeywords();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRobots();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.proto.Product.SEO.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.SEO} returns this
 */
proto.proto.Product.SEO.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.proto.Product.SEO.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.SEO} returns this
 */
proto.proto.Product.SEO.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string keywords = 3;
 * @return {string}
 */
proto.proto.Product.SEO.prototype.getKeywords = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.SEO} returns this
 */
proto.proto.Product.SEO.prototype.setKeywords = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool robots = 4;
 * @return {boolean}
 */
proto.proto.Product.SEO.prototype.getRobots = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Product.SEO} returns this
 */
proto.proto.Product.SEO.prototype.setRobots = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Product.Units.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Product.Units.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Product.Units} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Units.toObject = function(includeInstance, msg) {
  var f, obj = {
    dimensions: jspb.Message.getFieldWithDefault(msg, 1, ""),
    weight: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Product.Units}
 */
proto.proto.Product.Units.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Product.Units;
  return proto.proto.Product.Units.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Product.Units} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Product.Units}
 */
proto.proto.Product.Units.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDimensions(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Product.Units.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Product.Units.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Product.Units} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Units.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDimensions();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWeight();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string dimensions = 1;
 * @return {string}
 */
proto.proto.Product.Units.prototype.getDimensions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Units} returns this
 */
proto.proto.Product.Units.prototype.setDimensions = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string weight = 2;
 * @return {string}
 */
proto.proto.Product.Units.prototype.getWeight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Units} returns this
 */
proto.proto.Product.Units.prototype.setWeight = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.Product.Story.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Product.Story.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Product.Story.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Product.Story} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Story.toObject = function(includeInstance, msg) {
  var f, obj = {
    subtitle: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mediadelay: jspb.Message.getFieldWithDefault(msg, 3, 0),
    backgroundimage: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mediaList: jspb.Message.toObjectList(msg.getMediaList(),
    proto.proto.Product.Media.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Product.Story}
 */
proto.proto.Product.Story.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Product.Story;
  return proto.proto.Product.Story.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Product.Story} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Product.Story}
 */
proto.proto.Product.Story.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMediadelay(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackgroundimage(value);
      break;
    case 5:
      var value = new proto.proto.Product.Media;
      reader.readMessage(value,proto.proto.Product.Media.deserializeBinaryFromReader);
      msg.addMedia(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Product.Story.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Product.Story.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Product.Story} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Story.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMediadelay();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBackgroundimage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMediaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.proto.Product.Media.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subtitle = 1;
 * @return {string}
 */
proto.proto.Product.Story.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Story} returns this
 */
proto.proto.Product.Story.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.proto.Product.Story.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Story} returns this
 */
proto.proto.Product.Story.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 mediaDelay = 3;
 * @return {number}
 */
proto.proto.Product.Story.prototype.getMediadelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product.Story} returns this
 */
proto.proto.Product.Story.prototype.setMediadelay = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string backgroundImage = 4;
 * @return {string}
 */
proto.proto.Product.Story.prototype.getBackgroundimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Story} returns this
 */
proto.proto.Product.Story.prototype.setBackgroundimage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated Media media = 5;
 * @return {!Array<!proto.proto.Product.Media>}
 */
proto.proto.Product.Story.prototype.getMediaList = function() {
  return /** @type{!Array<!proto.proto.Product.Media>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Product.Media, 5));
};


/**
 * @param {!Array<!proto.proto.Product.Media>} value
 * @return {!proto.proto.Product.Story} returns this
*/
proto.proto.Product.Story.prototype.setMediaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.proto.Product.Media=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Product.Media}
 */
proto.proto.Product.Story.prototype.addMedia = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.proto.Product.Media, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Product.Story} returns this
 */
proto.proto.Product.Story.prototype.clearMediaList = function() {
  return this.setMediaList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Product.Media.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Product.Media.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Product.Media} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Media.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    alt: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Product.Media}
 */
proto.proto.Product.Media.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Product.Media;
  return proto.proto.Product.Media.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Product.Media} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Product.Media}
 */
proto.proto.Product.Media.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Product.Media.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Product.Media.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Product.Media} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Media.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAlt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.proto.Product.Media.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Media} returns this
 */
proto.proto.Product.Media.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.proto.Product.Media.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Media} returns this
 */
proto.proto.Product.Media.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string alt = 3;
 * @return {string}
 */
proto.proto.Product.Media.prototype.getAlt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Media} returns this
 */
proto.proto.Product.Media.prototype.setAlt = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.proto.Product.Media.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Media} returns this
 */
proto.proto.Product.Media.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Product.Vendor.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Product.Vendor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Product.Vendor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Vendor.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    gstin: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Product.Vendor}
 */
proto.proto.Product.Vendor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Product.Vendor;
  return proto.proto.Product.Vendor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Product.Vendor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Product.Vendor}
 */
proto.proto.Product.Vendor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGstin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Product.Vendor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Product.Vendor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Product.Vendor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Vendor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGstin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.Product.Vendor.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Vendor} returns this
 */
proto.proto.Product.Vendor.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.proto.Product.Vendor.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Vendor} returns this
 */
proto.proto.Product.Vendor.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string gstin = 3;
 * @return {string}
 */
proto.proto.Product.Vendor.prototype.getGstin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Vendor} returns this
 */
proto.proto.Product.Vendor.prototype.setGstin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Product.Donation.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Product.Donation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Product.Donation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Donation.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Product.Donation}
 */
proto.proto.Product.Donation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Product.Donation;
  return proto.proto.Product.Donation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Product.Donation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Product.Donation}
 */
proto.proto.Product.Donation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Product.Donation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Product.Donation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Product.Donation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.Donation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.proto.Product.Donation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Donation} returns this
 */
proto.proto.Product.Donation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.proto.Product.Donation.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Donation} returns this
 */
proto.proto.Product.Donation.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string amount = 3;
 * @return {string}
 */
proto.proto.Product.Donation.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product.Donation} returns this
 */
proto.proto.Product.Donation.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Product.ConvertedPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Product.ConvertedPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Product.ConvertedPrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.ConvertedPrice.toObject = function(includeInstance, msg) {
  var f, obj = {
    mrp: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    price: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    strikeoutprice: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Product.ConvertedPrice}
 */
proto.proto.Product.ConvertedPrice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Product.ConvertedPrice;
  return proto.proto.Product.ConvertedPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Product.ConvertedPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Product.ConvertedPrice}
 */
proto.proto.Product.ConvertedPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMrp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStrikeoutprice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Product.ConvertedPrice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Product.ConvertedPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Product.ConvertedPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Product.ConvertedPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMrp();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getStrikeoutprice();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float mrp = 1;
 * @return {number}
 */
proto.proto.Product.ConvertedPrice.prototype.getMrp = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product.ConvertedPrice} returns this
 */
proto.proto.Product.ConvertedPrice.prototype.setMrp = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float price = 2;
 * @return {number}
 */
proto.proto.Product.ConvertedPrice.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product.ConvertedPrice} returns this
 */
proto.proto.Product.ConvertedPrice.prototype.setPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float strikeOutPrice = 3;
 * @return {number}
 */
proto.proto.Product.ConvertedPrice.prototype.getStrikeoutprice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product.ConvertedPrice} returns this
 */
proto.proto.Product.ConvertedPrice.prototype.setStrikeoutprice = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.Product.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.proto.Product.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sku = 3;
 * @return {string}
 */
proto.proto.Product.prototype.getSku = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setSku = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string title = 4;
 * @return {string}
 */
proto.proto.Product.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.proto.Product.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string shortDescription = 6;
 * @return {string}
 */
proto.proto.Product.prototype.getShortdescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setShortdescription = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string parentId = 7;
 * @return {string}
 */
proto.proto.Product.prototype.getParentid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setParentid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string categories = 8;
 * @return {!Array<string>}
 */
proto.proto.Product.prototype.getCategoriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setCategoriesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.addCategories = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};


/**
 * optional string currency = 9;
 * @return {string}
 */
proto.proto.Product.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int64 price = 10;
 * @return {number}
 */
proto.proto.Product.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 sellPrice = 12;
 * @return {number}
 */
proto.proto.Product.prototype.getSellprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setSellprice = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * repeated Media images = 13;
 * @return {!Array<!proto.proto.Product.Media>}
 */
proto.proto.Product.prototype.getImagesList = function() {
  return /** @type{!Array<!proto.proto.Product.Media>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Product.Media, 13));
};


/**
 * @param {!Array<!proto.proto.Product.Media>} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setImagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.proto.Product.Media=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Product.Media}
 */
proto.proto.Product.prototype.addImages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.proto.Product.Media, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};


/**
 * repeated Media videos = 14;
 * @return {!Array<!proto.proto.Product.Media>}
 */
proto.proto.Product.prototype.getVideosList = function() {
  return /** @type{!Array<!proto.proto.Product.Media>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Product.Media, 14));
};


/**
 * @param {!Array<!proto.proto.Product.Media>} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setVideosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.proto.Product.Media=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Product.Media}
 */
proto.proto.Product.prototype.addVideos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.proto.Product.Media, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearVideosList = function() {
  return this.setVideosList([]);
};


/**
 * optional bool active = 15;
 * @return {boolean}
 */
proto.proto.Product.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * repeated Attribute attributes = 16;
 * @return {!Array<!proto.proto.Product.Attribute>}
 */
proto.proto.Product.prototype.getAttributesList = function() {
  return /** @type{!Array<!proto.proto.Product.Attribute>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Product.Attribute, 16));
};


/**
 * @param {!Array<!proto.proto.Product.Attribute>} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setAttributesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.proto.Product.Attribute=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Product.Attribute}
 */
proto.proto.Product.prototype.addAttributes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.proto.Product.Attribute, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearAttributesList = function() {
  return this.setAttributesList([]);
};


/**
 * optional Dimensions dimensions = 17;
 * @return {?proto.proto.Dimensions}
 */
proto.proto.Product.prototype.getDimensions = function() {
  return /** @type{?proto.proto.Dimensions} */ (
    jspb.Message.getWrapperField(this, proto.proto.Dimensions, 17));
};


/**
 * @param {?proto.proto.Dimensions|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setDimensions = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearDimensions = function() {
  return this.setDimensions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasDimensions = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional SEO seo = 20;
 * @return {?proto.proto.Product.SEO}
 */
proto.proto.Product.prototype.getSeo = function() {
  return /** @type{?proto.proto.Product.SEO} */ (
    jspb.Message.getWrapperField(this, proto.proto.Product.SEO, 20));
};


/**
 * @param {?proto.proto.Product.SEO|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setSeo = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearSeo = function() {
  return this.setSeo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasSeo = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional CMSDetails cmsDetails = 24;
 * @return {?proto.proto.CMSDetails}
 */
proto.proto.Product.prototype.getCmsdetails = function() {
  return /** @type{?proto.proto.CMSDetails} */ (
    jspb.Message.getWrapperField(this, proto.proto.CMSDetails, 24));
};


/**
 * @param {?proto.proto.CMSDetails|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setCmsdetails = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearCmsdetails = function() {
  return this.setCmsdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasCmsdetails = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * repeated Product variants = 27;
 * @return {!Array<!proto.proto.Product>}
 */
proto.proto.Product.prototype.getVariantsList = function() {
  return /** @type{!Array<!proto.proto.Product>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Product, 27));
};


/**
 * @param {!Array<!proto.proto.Product>} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setVariantsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 27, value);
};


/**
 * @param {!proto.proto.Product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Product}
 */
proto.proto.Product.prototype.addVariants = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 27, opt_value, proto.proto.Product, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearVariantsList = function() {
  return this.setVariantsList([]);
};


/**
 * optional int32 quantity = 28;
 * @return {number}
 */
proto.proto.Product.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional float weight = 29;
 * @return {number}
 */
proto.proto.Product.prototype.getWeight = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 29, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setWeight = function(value) {
  return jspb.Message.setProto3FloatField(this, 29, value);
};


/**
 * optional Units units = 30;
 * @return {?proto.proto.Product.Units}
 */
proto.proto.Product.prototype.getUnits = function() {
  return /** @type{?proto.proto.Product.Units} */ (
    jspb.Message.getWrapperField(this, proto.proto.Product.Units, 30));
};


/**
 * @param {?proto.proto.Product.Units|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setUnits = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearUnits = function() {
  return this.setUnits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasUnits = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * repeated string tags = 31;
 * @return {!Array<string>}
 */
proto.proto.Product.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 31));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 31, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 31, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string collection = 32;
 * @return {string}
 */
proto.proto.Product.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional int32 maxAllowed = 33;
 * @return {number}
 */
proto.proto.Product.prototype.getMaxallowed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setMaxallowed = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * optional int64 MRP = 34;
 * @return {number}
 */
proto.proto.Product.prototype.getMrp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setMrp = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * optional string hsnCode = 35;
 * @return {string}
 */
proto.proto.Product.prototype.getHsncode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setHsncode = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional Story story = 36;
 * @return {?proto.proto.Product.Story}
 */
proto.proto.Product.prototype.getStory = function() {
  return /** @type{?proto.proto.Product.Story} */ (
    jspb.Message.getWrapperField(this, proto.proto.Product.Story, 36));
};


/**
 * @param {?proto.proto.Product.Story|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setStory = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearStory = function() {
  return this.setStory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasStory = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional int64 strikeOutPrice = 37;
 * @return {number}
 */
proto.proto.Product.prototype.getStrikeoutprice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 37, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setStrikeoutprice = function(value) {
  return jspb.Message.setProto3IntField(this, 37, value);
};


/**
 * optional string badge = 38;
 * @return {string}
 */
proto.proto.Product.prototype.getBadge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setBadge = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional Vendor vendor = 39;
 * @return {?proto.proto.Product.Vendor}
 */
proto.proto.Product.prototype.getVendor = function() {
  return /** @type{?proto.proto.Product.Vendor} */ (
    jspb.Message.getWrapperField(this, proto.proto.Product.Vendor, 39));
};


/**
 * @param {?proto.proto.Product.Vendor|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setVendor = function(value) {
  return jspb.Message.setWrapperField(this, 39, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearVendor = function() {
  return this.setVendor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasVendor = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional string deliveryTime = 40;
 * @return {string}
 */
proto.proto.Product.prototype.getDeliverytime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setDeliverytime = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional Donation donation = 41;
 * @return {?proto.proto.Product.Donation}
 */
proto.proto.Product.prototype.getDonation = function() {
  return /** @type{?proto.proto.Product.Donation} */ (
    jspb.Message.getWrapperField(this, proto.proto.Product.Donation, 41));
};


/**
 * @param {?proto.proto.Product.Donation|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setDonation = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearDonation = function() {
  return this.setDonation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasDonation = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional string flag = 42;
 * @return {string}
 */
proto.proto.Product.prototype.getFlag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setFlag = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional string returnNexchange = 43;
 * @return {string}
 */
proto.proto.Product.prototype.getReturnnexchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setReturnnexchange = function(value) {
  return jspb.Message.setProto3StringField(this, 43, value);
};


/**
 * optional SizeChart sizeChart = 44;
 * @return {?proto.proto.SizeChart}
 */
proto.proto.Product.prototype.getSizechart = function() {
  return /** @type{?proto.proto.SizeChart} */ (
    jspb.Message.getWrapperField(this, proto.proto.SizeChart, 44));
};


/**
 * @param {?proto.proto.SizeChart|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setSizechart = function(value) {
  return jspb.Message.setWrapperField(this, 44, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearSizechart = function() {
  return this.setSizechart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasSizechart = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional Media thumbnail = 45;
 * @return {?proto.proto.Product.Media}
 */
proto.proto.Product.prototype.getThumbnail = function() {
  return /** @type{?proto.proto.Product.Media} */ (
    jspb.Message.getWrapperField(this, proto.proto.Product.Media, 45));
};


/**
 * @param {?proto.proto.Product.Media|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setThumbnail = function(value) {
  return jspb.Message.setWrapperField(this, 45, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearThumbnail = function() {
  return this.setThumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasThumbnail = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional string sellerId = 46;
 * @return {string}
 */
proto.proto.Product.prototype.getSellerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setSellerid = function(value) {
  return jspb.Message.setProto3StringField(this, 46, value);
};


/**
 * optional string footer = 47;
 * @return {string}
 */
proto.proto.Product.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setFooter = function(value) {
  return jspb.Message.setProto3StringField(this, 47, value);
};


/**
 * optional string redirection = 48;
 * @return {string}
 */
proto.proto.Product.prototype.getRedirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 48, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setRedirection = function(value) {
  return jspb.Message.setProto3StringField(this, 48, value);
};


/**
 * optional bool cod = 49;
 * @return {boolean}
 */
proto.proto.Product.prototype.getCod = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 49, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setCod = function(value) {
  return jspb.Message.setProto3BooleanField(this, 49, value);
};


/**
 * repeated string eventCodes = 50;
 * @return {!Array<string>}
 */
proto.proto.Product.prototype.getEventcodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 50));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setEventcodesList = function(value) {
  return jspb.Message.setField(this, 50, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.addEventcodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 50, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearEventcodesList = function() {
  return this.setEventcodesList([]);
};


/**
 * optional string qcUrl = 51;
 * @return {string}
 */
proto.proto.Product.prototype.getQcurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setQcurl = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional ConvertedPrice convertedPrice = 52;
 * @return {?proto.proto.Product.ConvertedPrice}
 */
proto.proto.Product.prototype.getConvertedprice = function() {
  return /** @type{?proto.proto.Product.ConvertedPrice} */ (
    jspb.Message.getWrapperField(this, proto.proto.Product.ConvertedPrice, 52));
};


/**
 * @param {?proto.proto.Product.ConvertedPrice|undefined} value
 * @return {!proto.proto.Product} returns this
*/
proto.proto.Product.prototype.setConvertedprice = function(value) {
  return jspb.Message.setWrapperField(this, 52, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.clearConvertedprice = function() {
  return this.setConvertedprice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.Product.prototype.hasConvertedprice = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional int32 thresholdQuantity = 53;
 * @return {number}
 */
proto.proto.Product.prototype.getThresholdquantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 53, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setThresholdquantity = function(value) {
  return jspb.Message.setProto3IntField(this, 53, value);
};


/**
 * optional bool enabled = 54;
 * @return {boolean}
 */
proto.proto.Product.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 54, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 54, value);
};


/**
 * optional string categoryId = 55;
 * @return {string}
 */
proto.proto.Product.prototype.getCategoryid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.Product} returns this
 */
proto.proto.Product.prototype.setCategoryid = function(value) {
  return jspb.Message.setProto3StringField(this, 55, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Dimensions.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Dimensions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Dimensions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Dimensions.toObject = function(includeInstance, msg) {
  var f, obj = {
    width: jspb.Message.getFieldWithDefault(msg, 1, 0),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    length: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Dimensions}
 */
proto.proto.Dimensions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Dimensions;
  return proto.proto.Dimensions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Dimensions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Dimensions}
 */
proto.proto.Dimensions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWidth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Dimensions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Dimensions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Dimensions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Dimensions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWidth();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 width = 1;
 * @return {number}
 */
proto.proto.Dimensions.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Dimensions} returns this
 */
proto.proto.Dimensions.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 height = 2;
 * @return {number}
 */
proto.proto.Dimensions.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Dimensions} returns this
 */
proto.proto.Dimensions.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 length = 3;
 * @return {number}
 */
proto.proto.Dimensions.prototype.getLength = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Dimensions} returns this
 */
proto.proto.Dimensions.prototype.setLength = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.CMSDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.CMSDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.CMSDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CMSDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.CMSDetails}
 */
proto.proto.CMSDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.CMSDetails;
  return proto.proto.CMSDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.CMSDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.CMSDetails}
 */
proto.proto.CMSDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.CMSDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.CMSDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.CMSDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.CMSDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.proto.CMSDetails.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CMSDetails} returns this
 */
proto.proto.CMSDetails.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.proto.CMSDetails.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.CMSDetails} returns this
 */
proto.proto.CMSDetails.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ManufactureDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ManufactureDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ManufactureDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ManufactureDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    modelnumber: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ManufactureDetails}
 */
proto.proto.ManufactureDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ManufactureDetails;
  return proto.proto.ManufactureDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ManufactureDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ManufactureDetails}
 */
proto.proto.ManufactureDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModelnumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ManufactureDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ManufactureDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ManufactureDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ManufactureDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModelnumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string modelNumber = 1;
 * @return {string}
 */
proto.proto.ManufactureDetails.prototype.getModelnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ManufactureDetails} returns this
 */
proto.proto.ManufactureDetails.prototype.setModelnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Sort.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Sort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Sort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Sort.toObject = function(includeInstance, msg) {
  var f, obj = {
    relevance: jspb.Message.getFieldWithDefault(msg, 1, 0),
    popularity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    price: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Sort}
 */
proto.proto.Sort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Sort;
  return proto.proto.Sort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Sort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Sort}
 */
proto.proto.Sort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRelevance(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPopularity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Sort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Sort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Sort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Sort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelevance();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPopularity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 relevance = 1;
 * @return {number}
 */
proto.proto.Sort.prototype.getRelevance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Sort} returns this
 */
proto.proto.Sort.prototype.setRelevance = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 popularity = 2;
 * @return {number}
 */
proto.proto.Sort.prototype.getPopularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Sort} returns this
 */
proto.proto.Sort.prototype.setPopularity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 price = 3;
 * @return {number}
 */
proto.proto.Sort.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.Sort} returns this
 */
proto.proto.Sort.prototype.setPrice = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.SizeChart.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.SizeChart.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.SizeChart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.SizeChart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SizeChart.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    image: jspb.Message.getFieldWithDefault(msg, 3, ""),
    note: jspb.Message.getFieldWithDefault(msg, 4, ""),
    headersList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.proto.SizeChart.SizeData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.SizeChart}
 */
proto.proto.SizeChart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.SizeChart;
  return proto.proto.SizeChart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.SizeChart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.SizeChart}
 */
proto.proto.SizeChart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNote(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addHeaders(value);
      break;
    case 6:
      var value = new proto.proto.SizeChart.SizeData;
      reader.readMessage(value,proto.proto.SizeChart.SizeData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.SizeChart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.SizeChart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.SizeChart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SizeChart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNote();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHeadersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.proto.SizeChart.SizeData.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.SizeChart.SizeData.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.SizeChart.SizeData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.SizeChart.SizeData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SizeChart.SizeData.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.SizeChart.SizeData}
 */
proto.proto.SizeChart.SizeData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.SizeChart.SizeData;
  return proto.proto.SizeChart.SizeData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.SizeChart.SizeData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.SizeChart.SizeData}
 */
proto.proto.SizeChart.SizeData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.SizeChart.SizeData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.SizeChart.SizeData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.SizeChart.SizeData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SizeChart.SizeData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.proto.SizeChart.SizeData.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.SizeChart.SizeData} returns this
 */
proto.proto.SizeChart.SizeData.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.proto.SizeChart.SizeData.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.SizeChart.SizeData} returns this
 */
proto.proto.SizeChart.SizeData.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.proto.SizeChart.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.SizeChart} returns this
 */
proto.proto.SizeChart.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.proto.SizeChart.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.SizeChart} returns this
 */
proto.proto.SizeChart.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string image = 3;
 * @return {string}
 */
proto.proto.SizeChart.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.SizeChart} returns this
 */
proto.proto.SizeChart.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string note = 4;
 * @return {string}
 */
proto.proto.SizeChart.prototype.getNote = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.SizeChart} returns this
 */
proto.proto.SizeChart.prototype.setNote = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string headers = 5;
 * @return {!Array<string>}
 */
proto.proto.SizeChart.prototype.getHeadersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.SizeChart} returns this
 */
proto.proto.SizeChart.prototype.setHeadersList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.SizeChart} returns this
 */
proto.proto.SizeChart.prototype.addHeaders = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.SizeChart} returns this
 */
proto.proto.SizeChart.prototype.clearHeadersList = function() {
  return this.setHeadersList([]);
};


/**
 * repeated SizeData data = 6;
 * @return {!Array<!proto.proto.SizeChart.SizeData>}
 */
proto.proto.SizeChart.prototype.getDataList = function() {
  return /** @type{!Array<!proto.proto.SizeChart.SizeData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.SizeChart.SizeData, 6));
};


/**
 * @param {!Array<!proto.proto.SizeChart.SizeData>} value
 * @return {!proto.proto.SizeChart} returns this
*/
proto.proto.SizeChart.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.proto.SizeChart.SizeData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.SizeChart.SizeData}
 */
proto.proto.SizeChart.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.proto.SizeChart.SizeData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.SizeChart} returns this
 */
proto.proto.SizeChart.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.UpdateProductQuantityReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UpdateProductQuantityReq.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UpdateProductQuantityReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UpdateProductQuantityReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateProductQuantityReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    productList: jspb.Message.toObjectList(msg.getProductList(),
    proto.proto.Product.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UpdateProductQuantityReq}
 */
proto.proto.UpdateProductQuantityReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UpdateProductQuantityReq;
  return proto.proto.UpdateProductQuantityReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UpdateProductQuantityReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UpdateProductQuantityReq}
 */
proto.proto.UpdateProductQuantityReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.Product;
      reader.readMessage(value,proto.proto.Product.deserializeBinaryFromReader);
      msg.addProduct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UpdateProductQuantityReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UpdateProductQuantityReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UpdateProductQuantityReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateProductQuantityReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.Product.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Product product = 1;
 * @return {!Array<!proto.proto.Product>}
 */
proto.proto.UpdateProductQuantityReq.prototype.getProductList = function() {
  return /** @type{!Array<!proto.proto.Product>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.Product, 1));
};


/**
 * @param {!Array<!proto.proto.Product>} value
 * @return {!proto.proto.UpdateProductQuantityReq} returns this
*/
proto.proto.UpdateProductQuantityReq.prototype.setProductList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.Product=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.Product}
 */
proto.proto.UpdateProductQuantityReq.prototype.addProduct = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.Product, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.UpdateProductQuantityReq} returns this
 */
proto.proto.UpdateProductQuantityReq.prototype.clearProductList = function() {
  return this.setProductList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UpdateProductQuantityRes.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UpdateProductQuantityRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UpdateProductQuantityRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateProductQuantityRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UpdateProductQuantityRes}
 */
proto.proto.UpdateProductQuantityRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UpdateProductQuantityRes;
  return proto.proto.UpdateProductQuantityRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UpdateProductQuantityRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UpdateProductQuantityRes}
 */
proto.proto.UpdateProductQuantityRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UpdateProductQuantityRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UpdateProductQuantityRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UpdateProductQuantityRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UpdateProductQuantityRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * @return {boolean}
 */
proto.proto.UpdateProductQuantityRes.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.UpdateProductQuantityRes} returns this
 */
proto.proto.UpdateProductQuantityRes.prototype.setStatus = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.proto.UpdateProductQuantityRes.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.UpdateProductQuantityRes} returns this
 */
proto.proto.UpdateProductQuantityRes.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProductQuantity.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProductQuantity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProductQuantity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductQuantity.toObject = function(includeInstance, msg) {
  var f, obj = {
    productid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    available: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProductQuantity}
 */
proto.proto.ProductQuantity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProductQuantity;
  return proto.proto.ProductQuantity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProductQuantity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProductQuantity}
 */
proto.proto.ProductQuantity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProductQuantity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProductQuantity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProductQuantity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductQuantity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAvailable();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string productId = 1;
 * @return {string}
 */
proto.proto.ProductQuantity.prototype.getProductid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ProductQuantity} returns this
 */
proto.proto.ProductQuantity.prototype.setProductid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 available = 2;
 * @return {number}
 */
proto.proto.ProductQuantity.prototype.getAvailable = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.ProductQuantity} returns this
 */
proto.proto.ProductQuantity.prototype.setAvailable = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.ProductQuantityResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProductQuantityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProductQuantityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProductQuantityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductQuantityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    productquantityList: jspb.Message.toObjectList(msg.getProductquantityList(),
    proto.proto.ProductQuantity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProductQuantityResponse}
 */
proto.proto.ProductQuantityResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProductQuantityResponse;
  return proto.proto.ProductQuantityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProductQuantityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProductQuantityResponse}
 */
proto.proto.ProductQuantityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.ProductQuantity;
      reader.readMessage(value,proto.proto.ProductQuantity.deserializeBinaryFromReader);
      msg.addProductquantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProductQuantityResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProductQuantityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProductQuantityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductQuantityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductquantityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.proto.ProductQuantity.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductQuantity productQuantity = 1;
 * @return {!Array<!proto.proto.ProductQuantity>}
 */
proto.proto.ProductQuantityResponse.prototype.getProductquantityList = function() {
  return /** @type{!Array<!proto.proto.ProductQuantity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.ProductQuantity, 1));
};


/**
 * @param {!Array<!proto.proto.ProductQuantity>} value
 * @return {!proto.proto.ProductQuantityResponse} returns this
*/
proto.proto.ProductQuantityResponse.prototype.setProductquantityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.proto.ProductQuantity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductQuantity}
 */
proto.proto.ProductQuantityResponse.prototype.addProductquantity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.proto.ProductQuantity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductQuantityResponse} returns this
 */
proto.proto.ProductQuantityResponse.prototype.clearProductquantityList = function() {
  return this.setProductquantityList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.ProductQuantityRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ProductQuantityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ProductQuantityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ProductQuantityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductQuantityRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productidList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ProductQuantityRequest}
 */
proto.proto.ProductQuantityRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ProductQuantityRequest;
  return proto.proto.ProductQuantityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ProductQuantityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ProductQuantityRequest}
 */
proto.proto.ProductQuantityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addProductid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ProductQuantityRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ProductQuantityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ProductQuantityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ProductQuantityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string productId = 1;
 * @return {!Array<string>}
 */
proto.proto.ProductQuantityRequest.prototype.getProductidList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.proto.ProductQuantityRequest} returns this
 */
proto.proto.ProductQuantityRequest.prototype.setProductidList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.proto.ProductQuantityRequest} returns this
 */
proto.proto.ProductQuantityRequest.prototype.addProductid = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.proto.ProductQuantityRequest} returns this
 */
proto.proto.ProductQuantityRequest.prototype.clearProductidList = function() {
  return this.setProductidList([]);
};


goog.object.extend(exports, proto.proto);
